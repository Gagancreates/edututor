[
  {
    "text": "1. Introduction (25%)",
    "timing": {
      "start": 0.0,
      "duration": 3.0
    },
    "type": "section_title"
  },
  {
    "text": "What is Recursion?",
    "timing": {
      "start": 3.0,
      "duration": 1.1
    },
    "type": "text_object"
  },
  {
    "text": "Recursion is a process where a function or object is defined in terms of itself.",
    "timing": {
      "start": 4.1,
      "duration": 1.1
    },
    "type": "text_object"
  },
  {
    "text": "Key Ideas:",
    "timing": {
      "start": 5.199999999999999,
      "duration": 1.1
    },
    "type": "text_object"
  },
  {
    "text": "1. Self-reference",
    "timing": {
      "start": 6.299999999999999,
      "duration": 1.1
    },
    "type": "text_object"
  },
  {
    "text": "2. Repetition",
    "timing": {
      "start": 7.399999999999999,
      "duration": 1.1
    },
    "type": "text_object"
  },
  {
    "text": "2. Core Understanding (40%) - Components",
    "timing": {
      "start": 8.499999999999998,
      "duration": 3.0
    },
    "type": "section_title"
  },
  {
    "text": "Components of Recursion",
    "timing": {
      "start": 11.499999999999998,
      "duration": 1.0
    },
    "type": "text_object"
  },
  {
    "text": "1. Base Case",
    "timing": {
      "start": 12.499999999999998,
      "duration": 1.0
    },
    "type": "text_object"
  },
  {
    "text": "The condition that stops the recursion.\\nIt provides a non-recursive solution.",
    "timing": {
      "start": 13.499999999999998,
      "duration": 1.0
    },
    "type": "text_object"
  },
  {
    "text": "2. Recursive Step",
    "timing": {
      "start": 14.499999999999998,
      "duration": 1.0
    },
    "type": "text_object"
  },
  {
    "text": "The part that calls itself with a smaller problem.\\nIt moves closer to the base case.",
    "timing": {
      "start": 15.499999999999998,
      "duration": 1.0
    },
    "type": "text_object"
  },
  {
    "text": "2. Core Understanding (40%) - Visual Analogy (Russian Dolls)",
    "timing": {
      "start": 16.5,
      "duration": 3.0
    },
    "type": "section_title"
  },
  {
    "text": "Analogy: Russian Nesting Dolls",
    "timing": {
      "start": 19.5,
      "duration": 1.2
    },
    "type": "text_object"
  },
  {
    "text": "Large Doll",
    "timing": {
      "start": 20.7,
      "duration": 1.2
    },
    "type": "text_object"
  },
  {
    "text": "Medium Doll",
    "timing": {
      "start": 21.9,
      "duration": 1.2
    },
    "type": "text_object"
  },
  {
    "text": "Small Doll",
    "timing": {
      "start": 23.099999999999998,
      "duration": 1.2
    },
    "type": "text_object"
  },
  {
    "text": "Each doll contains a smaller version of itself (Recursive Step)\\n",
    "timing": {
      "start": 24.299999999999997,
      "duration": 1.2
    },
    "type": "text_object"
  },
  {
    "text": "3. Examples (25%) - Factorial",
    "timing": {
      "start": 25.499999999999996,
      "duration": 3.0
    },
    "type": "section_title"
  },
  {
    "text": "Example: Factorial (n!)",
    "timing": {
      "start": 28.499999999999996,
      "duration": 4.75
    },
    "type": "text_object"
  },
  {
    "text": "Let",
    "timing": {
      "start": 33.25,
      "duration": 4.75
    },
    "type": "text_object"
  },
  {
    "text": "3. Examples (25%) - Fibonacci Sequence",
    "timing": {
      "start": 38.0,
      "duration": 3.0
    },
    "type": "section_title"
  },
  {
    "text": "Example: Fibonacci Sequence",
    "timing": {
      "start": 41.0,
      "duration": 3.25
    },
    "type": "text_object"
  },
  {
    "text": "Sequence: 0, 1, 1, 2, 3, 5, 8, ...",
    "timing": {
      "start": 44.25,
      "duration": 3.25
    },
    "type": "text_object"
  },
  {
    "text": "4. Applications (10%)",
    "timing": {
      "start": 47.5,
      "duration": 3.0
    },
    "type": "section_title"
  },
  {
    "text": "Applications of Recursion",
    "timing": {
      "start": 50.5,
      "duration": 1.2142857142857142
    },
    "type": "text_object"
  },
  {
    "text": "Fractals (e.g., Mandelbrot Set, Koch Snowflake)",
    "timing": {
      "start": 51.714285714285715,
      "duration": 1.2142857142857142
    },
    "type": "text_object"
  },
  {
    "text": "Recursive Algorithms (e.g., Merge Sort, Quick Sort)",
    "timing": {
      "start": 52.92857142857143,
      "duration": 1.2142857142857142
    },
    "type": "text_object"
  },
  {
    "text": "Tree & Graph Traversal (e.g., Depth-First Search)",
    "timing": {
      "start": 54.142857142857146,
      "duration": 1.2142857142857142
    },
    "type": "text_object"
  },
  {
    "text": "Recursion: A Powerful Concept",
    "timing": {
      "start": 55.35714285714286,
      "duration": 1.2142857142857142
    },
    "type": "text_object"
  },
  {
    "text": "- Solves problems by breaking them into smaller, similar subproblems.",
    "timing": {
      "start": 56.57142857142858,
      "duration": 1.2142857142857142
    },
    "type": "text_object"
  },
  {
    "text": "- Requires a Base Case to terminate and a Recursive Step to progress.",
    "timing": {
      "start": 57.78571428571429,
      "duration": 1.2142857142857142
    },
    "type": "text_object"
  }
]