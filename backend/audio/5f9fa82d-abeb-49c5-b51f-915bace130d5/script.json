[
  {
    "text": "1. New node points to Node B",
    "timing": {
      "start": 0.0,
      "duration": 3.0
    },
    "type": "section_title"
  },
  {
    "text": "2. Node A points to New Node X",
    "timing": {
      "start": 4.5,
      "duration": 3.0
    },
    "type": "section_title"
  },
  {
    "text": "Deletion Example",
    "timing": {
      "start": 7.5,
      "duration": 2.8428571428571425
    },
    "type": "text_object"
  },
  {
    "text": "Node to Delete",
    "timing": {
      "start": 10.342857142857142,
      "duration": 2.8428571428571425
    },
    "type": "text_object"
  },
  {
    "text": "Applications",
    "timing": {
      "start": 13.185714285714283,
      "duration": 2.8428571428571425
    },
    "type": "text_object"
  },
  {
    "text": "\u2022 Implementing Stacks and Queues",
    "timing": {
      "start": 16.028571428571425,
      "duration": 2.8428571428571425
    },
    "type": "text_object"
  },
  {
    "text": "\u2022 Music Playlists & Browser History",
    "timing": {
      "start": 18.871428571428567,
      "duration": 2.8428571428571425
    },
    "type": "text_object"
  },
  {
    "text": "\u2022 Dynamic memory allocation",
    "timing": {
      "start": 21.714285714285708,
      "duration": 2.8428571428571425
    },
    "type": "text_object"
  },
  {
    "text": "Linked lists are versatile for dynamic data!",
    "timing": {
      "start": 24.55714285714285,
      "duration": 2.8428571428571425
    },
    "type": "text_object"
  }
]